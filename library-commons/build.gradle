//https://openapi-generator.tech/docs/plugins/
//https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin
buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo1.maven.org/maven2" }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:6.0.1"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group 'com.project.microservices.library.commons'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.3")
}

//Al crear un proyecto de varios módulos que incluye un módulo fuera del proyecto springboot
bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    //basic
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //format
    //https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.3'
    //https://mvnrepository.com/artifact/org.apache.commons/commons-text
    //implementation 'org.apache.commons:commons-text:1.9'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

apply plugin: 'org.openapi.generator'

openApiGenerate {
    generatorName = "java"
    generateApiTests = false
    generateModelTests = false
    library = "jersey2"
//    generateApis = false
//    generateSupportingFiles = false

    inputSpec = "$rootDir/library-commons/src/main/resources/api/library-commons.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.project.microservices.library.commons.api"
    invokerPackage = "com.project.microservices.library.commons.invoker"
    modelPackage = "com.project.microservices.library.commons.model"
    configOptions = [
            dateLibrary: "java11"
    ]
}